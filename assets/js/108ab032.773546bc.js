"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4176],{8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>t});var l=a(6540);const i={},r=l.createContext(i);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(r.Provider,{value:n},e.children)}},9985:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"vdom","title":"Virtual DOM","description":"\xbfQu\xe9 es el DOM?","source":"@site/docs/vdom.md","sourceDirName":".","slug":"/vdom","permalink":"/CursoReact/docs/vdom","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vdom.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"vdom","title":"Virtual DOM","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Instalaci\xf3n","permalink":"/CursoReact/docs/instalacion"},"next":{"title":"Crear y anidar componentes","permalink":"/CursoReact/docs/componentes"}}');var i=a(4848),r=a(8453);const s={id:"vdom",title:"Virtual DOM",sidebar_position:3},t=void 0,o={},c=[{value:"\xbfQu\xe9 es el DOM?",id:"qu\xe9-es-el-dom",level:2},{value:"\xbfQu\xe9 hace React con el Virtual DOM?",id:"qu\xe9-hace-react-con-el-virtual-dom",level:2},{value:"Ejemplo",id:"ejemplo",level:2},{value:"Ventajas del Virtual DOM",id:"ventajas-del-virtual-dom",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"qu\xe9-es-el-dom",children:"\xbfQu\xe9 es el DOM?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"El DOM (Document Object Model) es una representaci\xf3n en forma de \xe1rbol de tu p\xe1gina web."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Cada elemento HTML (un ",(0,i.jsx)(n.code,{children:"<div>, <button>, <p>, etc."}),") es un \u201cnodo\u201d en ese \xe1rbol."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"El navegador usa este \xe1rbol para saber qu\xe9 mostrar en pantalla."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Modificar el DOM real es lento. Cada vez que cambias algo (ej. el texto de un bot\xf3n), el navegador tiene que recalcular estilos, reestructurar el \xe1rbol y redibujar la pantalla."}),"\n",(0,i.jsx)(n.h2,{id:"qu\xe9-hace-react-con-el-virtual-dom",children:"\xbfQu\xe9 hace React con el Virtual DOM?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"React crea una copia virtual del DOM \u2192 el Virtual DOM."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Este Virtual DOM es una representaci\xf3n ligera del DOM real, que React guarda en memoria."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Cuando algo cambia en tu app (ej. se incrementa un contador con useState):"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"React actualiza el Virtual DOM primero."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Compara el Virtual DOM anterior con el nuevo (esto se llama diffing)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Encuentra las diferencias m\xednimas (ej. \u201csolo cambi\xf3 el n\xfamero en este ",(0,i.jsx)(n.code,{children:"<span>"}),"\u201d)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Actualiza solo esa parte en el DOM real."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"function Counter() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contador: {count}</h1>\r\n      <button onClick={() => setCount(count + 1)}>+1</button>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Cada vez que das clic en el bot\xf3n:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"React NO vuelve a dibujar toda la p\xe1gina."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Solo cambia el texto ",(0,i.jsx)(n.code,{children:"{count}"})," dentro del ",(0,i.jsx)(n.code,{children:"<h1>"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Esto es gracias al Virtual DOM que detecta qu\xe9 cambi\xf3 exactamente."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ventajas-del-virtual-dom",children:"Ventajas del Virtual DOM"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Rendimiento: evita modificaciones innecesarias en el DOM real."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Optimizaci\xf3n autom\xe1tica: React decide qu\xe9 actualizar, t\xfa no te preocupas por eso."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Experiencia fluida: la app responde r\xe1pido, incluso con muchos cambios."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"El Virtual DOM es como un borrador en memoria que React usa para planear los cambios en la interfaz. Luego solo aplica los cambios estrictamente necesarios en el navegador."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);