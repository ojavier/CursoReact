"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4503],{8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>i});var r=o(6540);const s={},a=r.createContext(s);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(a.Provider,{value:n},e.children)}},9766:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"datos","title":"Compartir datos entre componentes","description":"\xbfQu\xe9 pasa si varios componentes comparten datos?","source":"@site/docs/datos.md","sourceDirName":".","slug":"/datos","permalink":"/CursoReact/docs/datos","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datos.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"datos","title":"Compartir datos entre componentes","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Hooks","permalink":"/CursoReact/docs/hooks"},"next":{"title":"Lab 1","permalink":"/CursoReact/docs/laboratorio/lab1"}}');var s=o(4848),a=o(8453);const t={id:"datos",title:"Compartir datos entre componentes",sidebar_position:8},i=void 0,c={},l=[{value:"\xbfQu\xe9 pasa si varios componentes comparten datos?",id:"qu\xe9-pasa-si-varios-componentes-comparten-datos",level:2},{value:"Pasar datos con Props",id:"pasar-datos-con-props",level:2},{value:"Compartir datos entre hermanos (levantar el estado)",id:"compartir-datos-entre-hermanos-levantar-el-estado",level:2},{value:"Compartir datos con Context (cuando hay muchos componentes)",id:"compartir-datos-con-context-cuando-hay-muchos-componentes",level:2},{value:"Resumen",id:"resumen",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"qu\xe9-pasa-si-varios-componentes-comparten-datos",children:"\xbfQu\xe9 pasa si varios componentes comparten datos?"}),"\n",(0,s.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Un componente que guarda el nombre del usuario."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Otro componente que lo muestra en pantalla."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pasar-datos-con-props",children:"Pasar datos con Props"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'function Saludo({ nombre }) {\r\n  return <h1>Hola, {nombre} </h1>;\r\n}\r\n\r\nfunction App() {\r\n  return <Saludo nombre="Oscar" />;\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Qu\xe9 pasa:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:'App pasa nombre="Oscar" a Saludo.'}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saludo recibe nombre y lo muestra en pantalla."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Esto es como pasarle un mensaje de un componente padre a su hijo."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"compartir-datos-entre-hermanos-levantar-el-estado",children:"Compartir datos entre hermanos (levantar el estado)"}),"\n",(0,s.jsx)(n.p,{children:"\xbfQu\xe9 pasa si dos componentes necesitan el mismo dato?"}),"\n",(0,s.jsx)(n.p,{children:"Ejemplo: un input que guarda el nombre y un saludo que lo muestra."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'import { useState } from "react";\r\n\r\nfunction EntradaNombre({ onChangeNombre }) {\r\n  return (\r\n    <input\r\n      type="text"\r\n      placeholder="Escribe tu nombre"\r\n      onChange={(e) => onChangeNombre(e.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Saludo({ nombre }) {\r\n  return <h1>Hola, {nombre || "desconocido"} </h1>;\r\n}\r\n\r\nfunction App() {\r\n  const [nombre, setNombre] = useState("");\r\n\r\n  return (\r\n    <div>\r\n      <EntradaNombre onChangeNombre={setNombre} />\r\n      <Saludo nombre={nombre} />\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Qu\xe9 pasa:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"App guarda el nombre en su estado."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"EntradaNombre actualiza el estado."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saludo recibe el valor y lo muestra."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"As\xed, ambos usan el mismo dato, porque est\xe1 en el componente padre."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Esto se llama levantar el estado (porque subes el estado a un componente que est\xe1 por encima de ambos)."}),"\n",(0,s.jsx)(n.h2,{id:"compartir-datos-con-context-cuando-hay-muchos-componentes",children:"Compartir datos con Context (cuando hay muchos componentes)"}),"\n",(0,s.jsx)(n.p,{children:"Si tienes que pasar los mismos datos a muchos niveles (por ejemplo, usuario \u2192 header, sidebar, footer), usar props puede ser muy inc\xf3modo."}),"\n",(0,s.jsxs)(n.p,{children:["Para eso existe el ",(0,s.jsx)(n.strong,{children:"Context API"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Ejemplo simple:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'import { createContext, useContext, useState } from "react";\r\n\r\nconst UsuarioContext = createContext();\r\n\r\nfunction Saludo() {\r\n  const nombre = useContext(UsuarioContext);\r\n  return <h1>Hola, {nombre} </h1>;\r\n}\r\n\r\nfunction App() {\r\n  const [nombre, setNombre] = useState("Oscar");\r\n\r\n  return (\r\n    <UsuarioContext.Provider value={nombre}>\r\n      <Saludo />\r\n    </UsuarioContext.Provider>\r\n  );\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Qu\xe9 pasa:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"UsuarioContext.Provider \u2192 es como una caja que envuelve los componentes y les pasa el valor."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"useContext(UsuarioContext) \u2192 saca el valor de esa caja."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"No necesitas pasar props manualmente por cada nivel. React lo hace autom\xe1ticamente."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Props"}),": Cuando pasas datos de padre \u2192 hijo (caso simple)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Levantar estado"}),": Cuando pasas datos de padre \u2192 hijo (caso simple)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Context"}),": Cuando los datos se usan en muchos niveles y pasar props ser\xeda tedioso."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);