"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5078],{8453:(e,r,a)=>{a.d(r,{R:()=>o,x:()=>s});var n=a(6540);const t={},i=n.createContext(t);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:r},e.children)}},8826:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"laboratorio/lab2","title":"Lab 2","description":"En este segundo laboratorio aprender\xe1s a darle vida a los componentes de tu recetario. Hasta ahora, tus recetas se muestran de manera est\xe1tica; en esta pr\xe1ctica, incorporar\xe1s interactividad usando eventos y estados (hooks).","source":"@site/docs/laboratorio/lab2.md","sourceDirName":"laboratorio","slug":"/laboratorio/lab2","permalink":"/CursoReact/docs/laboratorio/lab2","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/laboratorio/lab2.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Lab 2","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Lab 1","permalink":"/CursoReact/docs/laboratorio/lab1"}}');var t=a(4848),i=a(8453);const o={title:"Lab 2",sidebar_position:2},s="Laboratorio: Agregando Interactividad al Recetario con React",c={},l=[{value:"RecipeCard con Likes",id:"recipecard-con-likes",level:2},{value:"RecipeList con Formulario para Agregar Nuevas Recetas",id:"recipelist-con-formulario-para-agregar-nuevas-recetas",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"laboratorio-agregando-interactividad-al-recetario-con-react",children:"Laboratorio: Agregando Interactividad al Recetario con React"})}),"\n",(0,t.jsx)(r.p,{children:"En este segundo laboratorio aprender\xe1s a darle vida a los componentes de tu recetario. Hasta ahora, tus recetas se muestran de manera est\xe1tica; en esta pr\xe1ctica, incorporar\xe1s interactividad usando eventos y estados (hooks)."}),"\n",(0,t.jsx)(r.p,{children:"Con ello, podr\xe1s reaccionar a las acciones del usuario (como dar clic en un bot\xf3n) y actualizar la pantalla autom\xe1ticamente."}),"\n",(0,t.jsx)(r.p,{children:"A continucaci\xf3n se presentar\xe1n ideas de componentes y estructuras, pero tengan la libertad de hacer la aplicaci\xf3n a su gusto."}),"\n",(0,t.jsx)(r.h2,{id:"recipecard-con-likes",children:"RecipeCard con Likes"}),"\n",(0,t.jsx)(r.p,{children:"Cada tarjeta de receta tiene su propio contador de \u201clikes\u201d. Cada vez que das clic, el estado cambia y React actualiza el n\xfamero autom\xe1ticamente."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'import { useState } from "react";\r\n\r\nfunction RecipeCard({ title, description }) {\r\n  // Estado para los likes\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  // Funci\xf3n que aumenta likes\r\n  const handleLike = () => {\r\n    setLikes(likes + 1);\r\n  };\r\n\r\n  return (\r\n    <div className="border p-4 rounded-lg shadow-md mb-4">\r\n      <h2 className="text-xl font-bold">{title}</h2>\r\n      <p>{description}</p>\r\n      \r\n      <button \r\n        onClick={handleLike}\r\n        className="bg-blue-500 text-white px-3 py-1 rounded mt-2"\r\n      >\r\n        \ud83d\udc4d Me gusta ({likes})\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeCard;\n'})}),"\n",(0,t.jsx)(r.h2,{id:"recipelist-con-formulario-para-agregar-nuevas-recetas",children:"RecipeList con Formulario para Agregar Nuevas Recetas"}),"\n",(0,t.jsx)(r.p,{children:"Esto deber\xeda:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Llenar el formulario con una nueva receta."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Al enviar, la receta se agrega a la lista sin recargar la p\xe1gina."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"React vuelve a renderizar y muestra la nueva receta."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'import { useState } from "react";\r\nimport RecipeCard from "./RecipeCard";\r\n\r\nfunction RecipeList() {\r\n  // Estado con las recetas iniciales\r\n  const [recipes, setRecipes] = useState([\r\n    { title: "Spaghetti Bolognese", description: "Pasta con salsa de tomate y carne." },\r\n    { title: "Tacos al Pastor", description: "Tortilla con carne marinada, pi\xf1a y salsa." }\r\n  ]);\r\n\r\n  // Estado para los inputs del formulario\r\n  const [newTitle, setNewTitle] = useState("");\r\n  const [newDescription, setNewDescription] = useState("");\r\n\r\n  // Funci\xf3n que agrega nueva receta\r\n  const handleAddRecipe = (e) => {\r\n    e.preventDefault(); // Evita recargar la p\xe1gina\r\n\r\n    // Crear objeto receta\r\n    const newRecipe = { title: newTitle, description: newDescription };\r\n\r\n    // Agregar receta al arreglo\r\n    setRecipes([...recipes, newRecipe]);\r\n\r\n    // Limpiar inputs\r\n    setNewTitle("");\r\n    setNewDescription("");\r\n  };\r\n\r\n  return (\r\n    <div className="p-4">\r\n      <h1 className="text-2xl font-bold mb-4">\ud83d\udcd6 Recetario</h1>\r\n\r\n      {/* Formulario para nueva receta */}\r\n      <form onSubmit={handleAddRecipe} className="mb-6">\r\n        <input\r\n          type="text"\r\n          placeholder="Nombre de la receta"\r\n          value={newTitle}\r\n          onChange={(e) => setNewTitle(e.target.value)}\r\n          className="border p-2 mr-2 rounded"\r\n          required\r\n        />\r\n        <input\r\n          type="text"\r\n          placeholder="Descripci\xf3n"\r\n          value={newDescription}\r\n          onChange={(e) => setNewDescription(e.target.value)}\r\n          className="border p-2 mr-2 rounded"\r\n          required\r\n        />\r\n        <button \r\n          type="submit"\r\n          className="bg-green-500 text-white px-3 py-1 rounded"\r\n        >\r\n          \u2795 Agregar\r\n        </button>\r\n      </form>\r\n\r\n      {/* Lista de recetas */}\r\n      {recipes.map((recipe, index) => (\r\n        <RecipeCard \r\n          key={index}\r\n          title={recipe.title}\r\n          description={recipe.description}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\n'})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);