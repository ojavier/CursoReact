"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6845],{7251:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"hooks","title":"Hooks","description":"Un hook es como una herramienta especial que te da React para usar estados y otras funciones en tus componentes.","source":"@site/docs/hooks.md","sourceDirName":".","slug":"/hooks","permalink":"/CursoReact/docs/hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/hooks.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"hooks","title":"Hooks","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Eventos y estados","permalink":"/CursoReact/docs/estado"},"next":{"title":"Compartir datos entre componentes","permalink":"/CursoReact/docs/datos"}}');var r=s(4848),a=s(8453);const t={id:"hooks",title:"Hooks",sidebar_position:7},c="Hooks",i={},l=[{value:"El m\xe1s famoso: useState",id:"el-m\xe1s-famoso-usestate",level:2},{value:"Otro muy \xfatil: useEffect",id:"otro-muy-\xfatil-useeffect",level:2},{value:"Otros Hooks Comunes",id:"otros-hooks-comunes",level:2},{value:"Resumen",id:"resumen",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"hooks",children:"Hooks"})}),"\n",(0,r.jsx)(n.p,{children:"Un hook es como una herramienta especial que te da React para usar estados y otras funciones en tus componentes.\r\nPor ejemplo, que puedan guardar datos, reaccionar a cambios, o conectarse con cosas externas."}),"\n",(0,r.jsx)(n.h2,{id:"el-m\xe1s-famoso-usestate",children:"El m\xe1s famoso: useState"}),"\n",(0,r.jsx)(n.p,{children:"Te permite guardar informaci\xf3n (estado) en un componente y actualizar la pantalla cuando cambie."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'import { useState } from "react";\r\n\r\nfunction Contador() {\r\n  const [contador, setContador] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>Valor: {contador}</p>\r\n      <button onClick={() => setContador(contador + 1)}>Sumar</button>\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Qu\xe9 pasa:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"useState(0) \u2192 crea una cajita de datos que empieza en 0."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"contador \u2192 el valor actual."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"setContador \u2192 funci\xf3n para cambiar el valor."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cuando llamas setContador, React vuelve a renderizar el componente con el valor nuevo."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"otro-muy-\xfatil-useeffect",children:"Otro muy \xfatil: useEffect"}),"\n",(0,r.jsx)(n.p,{children:"Sirve para hacer algo cuando pase un evento en el ciclo de vida del componente\r\n(por ejemplo: al montar el componente, al cambiar un valor o al desmontarse)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'import { useState, useEffect } from "react";\r\n\r\nfunction Reloj() {\r\n  const [hora, setHora] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setHora(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer); // Limpieza al desmontar\r\n  }, []);\r\n\r\n  return <p>Hora actual: {hora.toLocaleTimeString()}</p>;\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Qu\xe9 pasa:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"useEffect(() => {...}, [])"})," \u2192 se ejecuta al montar el componente."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Creamos un intervalo que actualiza la hora cada segundo."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"React vuelve a renderizar cada vez que hora cambia."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"otros-hooks-comunes",children:"Otros Hooks Comunes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"useContext \u2192 compartir datos entre componentes sin pasarlos manualmente por props."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"useRef \u2192 guardar valores que no necesitan volver a renderizar el componente."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"useReducer \u2192 manejar estados m\xe1s complejos (como un mini Redux)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"useMemo / useCallback \u2192 optimizar rendimiento."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Hooks = funciones especiales de React."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Empiezan siempre con use (useState, useEffect, etc.)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Te permiten usar estado, efectos secundarios y otras caracter\xedsticas sin clases."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Son la base para que tus componentes sean interactivos y din\xe1micos."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var o=s(6540);const r={},a=o.createContext(r);function t(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);